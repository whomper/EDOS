10 ;
20 ; MACROS.M65 - V. 
30 ;
40 ;
50 ;
60 ; COPY TXT FROM 1 BUF TO ANOTHER
70 ; %1 - SRC
80 ; %2 - DEST
90 ; %3 - BOLD?
0100 ; %4 - OFFSET MEM
0110 ; %5 - COUNT MEM
0120 ; X HOLD COUNT
0130     .MACRO @CPYMEM 
0140       .IF %0>3
0150       LDY %4
0160       .ENDIF 
0170     LDX #$00
0180 LOOP
0190     LDA %1,X
0200       .IF %0>2
0210         .IF %3=1
0220         CLC 
0230         ADC #$80
0240         .ENDIF 
0250       .ENDIF 
0260       .IF %0>3
0270       STA %2,Y
0280       INY 
0290       .ELSE 
0300       STA %2,X
0310       .ENDIF 
0320     INX 
0330       .IF %0>4
0340       CPX %5
0350       .ELSE 
0360       CMP #EOL
0370       .ENDIF 
0380     BNE LOOP
0390 DONE
0400     .ENDM 
0410 ;
0420 ;
0430 ;
0440 ; PUSHES A WORD ON THESTACK
0450 ; %1 - WORD TO STACK
0460     .MACRO @WRD2STK 
0470     LDA %1+1
0480     PHA 
0490     LDA %1
0500     PHA 
0510     .ENDM 
0520 ;
0530 ;
0540 ;
0550 ; STORE WORD ON STACK
0560 ; %1 - PTR TO STORE
0570     .MACRO @PTR2STK 
0580     LDA # >%1
0590     PHA 
0600     LDA # <%1
0610     PHA 
0620     .ENDM 
0630 ;
0640 ;
0650 ;
0660 ; PUT CURSOR POS ON STACK
0670 ;
0680     .MACRO @CHECURPOS 
0690     LDA ROWCRS
0700     PHA 
0710     LDA COLCRS
0720     PHA 
0730     .ENDM 
0740 ;
0750 ;
0760 ;
0770 ; HIDES THE CURSOR
0780     .MACRO @HIDCUR 
0790     LDA #$01
0800     STA CRSINH
0810     .ENDM 
0820 ;
0830 ;
0840 ;
0850 ; SHOWS THE CURSOR
0860     .MACRO @SHWCUR 
0870     LDA #$00
0880     STA CRSINH
0890     .ENDM 
0900 ;
0910 ;
0920 ;
0930 ; GREEN BACKGROUND
0940     .MACRO @COLGRN 
0950     LDA #$C8
0960     STA COLOR4
0970     .ENDM 
0980 ;
0990 ;
1000 ;
1010 ; RED BACKGROUND
1020     .MACRO @COLRED 
1030     LDA #$40
1040     STA COLOR4
1050     .ENDM 
1060 ;
1070 ;
1080 ;
1090 ; BLACK BACKGROUND
1100     .MACRO @COLDEF 
1110     LDA #$00
1120     STA COLOR4
1130     .ENDM 
1140 ;
1150 ;
1160 ;
1170 ; CONVERT TO BOLD
1180     .MACRO @MKBOLD 
1190     CLC 
1200     ADC #$80
1210     .ENDM 
1220 ;
1230 ;
1240 ;
1250 ; FORCE UPPERCASE
1260     .MACRO @MKCAPS 
1270     LDA #$40
1280     STA SHFLOK
1290     .ENDM 
1300 ;
1310 ;
1320 ;
1330 ; CONVERT DIGIT TO ASCII
1340     .MACRO @MKASCII 
1350     CLC 
1360     ADC #$30
1370     .ENDM 
1380 ;
1390 ;
1400 ;
1410 ; CONVERT ASCII TO DIGIT
1420     .MACRO @RMASCII 
1430     SEC 
1440     SBC #$30
1450     .ENDM 
1460 ;
1470 ;
1480 ;
1490 ; READ RETURN ADDRESS
1500     .MACRO @GETRETADR 
1510     PLA 
1520     STA RETADR
1530     PLA 
1540     STA RETADR+1
1550     .ENDM 
1560 ;
1570 ;
1580 ;
1590 ; CACHE RETURN ADDRESS
1600     .MACRO @SETRETADR 
1610     LDA RETADR+1
1620     PHA 
1630     LDA RETADR
1640     PHA 
1650     .ENDM 
1660 ;
1670 ;
1680 ;
1690 ; SILENCE SIO
1700     .MACRO @SIOSNDOFF 
1710     LDA #$00
1720     STA SOUNDR
1730     .ENDM 
1740 ;
1750 ;
1760 ;
1770 ; ENABLE SIO SOUND
1780     .MACRO @SIOSNDON 
1790     LDA #$01
1800     STA SOUNDR
1810     .ENDM 
1820 ;
1830 ;
1840 ;
1850 ; HIDE SPECIAL CHARACTERS
1860     .MACRO @HIDCHR 
1870     LDA #$00
1880     STA DSPFLG
1890     .ENDM 
1900 ;
1910 ;
1920 ;
1930 ; SHOW SPECIAL CHARACTERS
1940     .MACRO @SHWCHR 
1950     LDA #$01
1960     STA DSPFLG
1970     .ENDM 
1980 ;
1990 ;
2000 ;
2010 ; RESTORE CURSOR POSITION
2020 ;
2030     .MACRO @RSTCURPOS 
2040     PLA 
2050     STA COLCRS
2060     PLA 
2070     STA ROWCRS
2080     .ENDM 
2090 ;
2100 ;
2110 ;
2120 ; ENABLE PAGE 0 POINTER
2130 ; %1 - TARGET TXT BUF
2140 ;
2150     .MACRO @POINT2TXT 
2160     LDA # <%1
2170     STA INDPTR
2180     LDA # >%1
2190     STA INDPTR+1
2200     .ENDM 
2210 ;
2220 ;
2230 ;
2240 ; FILLS BUF WITH CHAR
2250 ; %1 - MEM
2260 ; %2 - LEN TO ZERO
2270 ; %3 - CHAR TO FILL
2280 ;
2290     .MACRO @FILLMEM 
2300     TXA 
2310     PHA 
2320     LDA #%3
2330     LDX #$00
2340 LOOP
2350     STA %1,X
2360     INX 
2370     CPX #%2
2380     BNE LOOP
2390     PLA 
2400     TAX 
2410     .ENDM 
2420 ;
2430 ;
2440 ;
2450 ; POINT TO A BUF FOR GETTEXT
2460     .MACRO @INPRM 
2470     LDA # <%1
2480     LDY # >%1
2490     .ENDM 
2500 ;
2510 ;
2520 ;
2530 ; PREPARE DATA FOR MUL16 METHOD
2540     .MACRO @MUL16PRM 
2550 ;     .IF %1<256
2560     LDA #%1
2570 ;     .ELSE
2580 ;     LDA %1
2590 ;     .ENDIF
2600     PHA 
2610 ;     .IF %2<256
2620 ;     LDA #%2
2630 ;     .ELSE
2640     LDA %2
2650 ;     .ENDIF
2660     PHA 
2670     LDA #%3
2680     PHA 
2690     LDA #%4
2700     PHA 
2710     .ENDM 
2720 ;
2730 ;
2740 ;
2750 ; HELPER FOR THE DRAW METHOD
2760 ; %1-CHAR
2770 ; %2-POS
2780 ; %3-LEN
2790     .MACRO @DRAW 
2800     LDA #%1
2810     LDX #%2
2820     LDY #%3
2830     JSR DRAW
2840     .ENDM 
2850 ;
2860 ;
2870 ;
2880 ; HELPER FOR PRNTLN METHOD
2890 ; %1 - TXT BUF
2900 ; %2 - 0-NO EOL, >0 DELIM
2910     .MACRO @PRNTLN 
2920     LDA # >%1
2930     PHA 
2940     LDA # <%1
2950     PHA 
2960       .IF %0>1
2970       LDA #%2
2980       .ELSE 
2990       LDA #EOL
3000       .ENDIF 
3010     PHA 
3020     JSR PRNTLN
3030     .ENDM 
3040 ;
3050 ;
3060 ;
3070 ; SET SECTOR # TO DAUX1/2
3080 ; %1 - LO BYTE
3090 ; %2 - HI BYTE
3100     .MACRO @SETSCT 
3110       .IF %1<256
3120       LDA #%1
3130       .ELSE 
3140       LDA %1
3150       .ENDIF 
3160     STA DAUX1
3170       .IF %2<256
3180       LDA #%2
3190       .ELSE 
3200       LDA %2
3210       .ENDIF 
3220     STA DAUX2
3230     .ENDM 
3240 ;
3250 ;
3260 ;
3270 ; HELPE FOR DOSIO METHOD
3280 ; %1 - COMND
3290 ; %2 - STAT
3300 ; %3 - BUF
3310 ; %4 - TIME
3320 ; %5 - SIZE LO
3330 ; %6 - SIZE HI
3340 ; %7 - FLAG
3350     .MACRO @DOSIO 
3360       .IF %0>6
3370       LDA #%7
3380       .ELSE 
3390       LDA #$00
3400       .ENDIF 
3410     PHA 
3420       .IF %6<256
3430       LDA #%6
3440       .ELSE 
3450       LDA %6
3460       .ENDIF 
3470     PHA 
3480       .IF %5<256
3490       LDA #%5
3500       .ELSE 
3510       LDA %5
3520       .ENDIF 
3530     PHA 
3540     LDA #%4
3550     PHA 
3560     LDA # >%3
3570     PHA 
3580     LDA # <%3
3590     PHA 
3600     LDA #%2
3610     PHA 
3620       .IF %1<256
3630       LDA #%1
3640       .ELSE 
3650       LDA %1
3660       .ENDIF 
3670     PHA 
3680     .ENDM 
3690 ;
3700 ;
3710 ; HELPER FOR DOCIO METHOD
3720 ; %1 - DEVIO
3730 ; %2 - ICM.XX
3740 ; %3 - BUF
3750 ; %4 - ICAX
3760 ; %5 - BUF LEN L - MEM
3770 ; %6 - BUF LEN H - MEM
3780 ; %7 - 1=BUF IS PNTR
3790     .MACRO @DOCIO 
3800       .IF %0>5
3810       LDA %6
3820       .ELSE 
3830       LDA #$00
3840       .ENDIF 
3850     PHA 
3860       .IF %0>4
3870       LDA %5
3880       .ELSE 
3890       LDA #$00
3900       .ENDIF 
3910     PHA 
3920     LDA #%4
3930     PHA 
3940       .IF %0>6
3950         .IF %7=1
3960         LDA %3+1
3970         .ELSE 
3980         LDA # >%3
3990         .ENDIF 
4000       .ELSE 
4010       LDA # >%3
4020       .ENDIF 
4030     PHA 
4040       .IF %0>6
4050         .IF %7=1
4060         LDA %3
4070         .ELSE 
4080         LDA # <%3
4090         .ENDIF 
4100       .ELSE 
4110       LDA # <%3
4120       .ENDIF 
4130     PHA 
4140     LDA #%2
4150     PHA 
4160     LDA #%1
4170     PHA 
4180     JSR DOCIO
4190     .ENDM 
4200 ;
4210 ;
4220 ;
4230 ; CLOSE A CIO CHANNEL
4240 ; %1 - DEV ID
4250     .MACRO @CLOSEIO 
4260     LDX #%1
4270     LDA #ICM.CL
4280     STA ICCOM,X
4290     JSR CIOV
4300     .ENDM 
4310 ;
4320 ;
4330 ;
4340 ; SET RETURN ADDRESS FOR
4350 ; FUNCTIONS THAT HAVE NO RTS
4360 ; %1 - RTN ADDR
4370     .MACRO @SETRTNA 
4380     LDA # <%1
4390     STA RTNPTR
4400     LDA # >%1
4410     STA RTNPTR+1
4420     .ENDM 
