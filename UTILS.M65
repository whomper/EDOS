10 ;
20 ; UTILS.M65, V. 
30 ;
40 ;
50 ;
60 ;
70 ;
80 ; DISPLAYS $80 BYTES OF A MEMORY
90 ; ADDRESS IN A FORMATTED VIEW
0100 ; FILE-PRINTED LINE
0110 ; BUF-BUFFER
0120 ;
0130 DSPBIN
0140      @SHWCHR  
0150     LDA BYTRD
0160     CMP #$80
0170     BEQ DSPBIN_0
0180     LDA #$01    ;EOF REACHED
0190     STA ABORT
0200 DSPBIN_0
0210     JSR DRWHDR
0220     LDX #$00
0230 ; CLEAR LINE
0240 DSPBIN_1
0250      @FILLMEM  FILE,$28,$20
0260     LDA #EOL
0270     STA FILE+$25
0280     LDY #$00
0290      @POINT2TXT  FILE
0300 ; LOCATION
0310     LDA FILPOS+1
0320     JSR BIN2HEX
0330     LDA D1
0340     STA (INDPTR),Y
0350     JSR INCPTR
0360     LDA D0
0370     STA (INDPTR),Y
0380     JSR INCPTR
0390     LDA FILPOS
0400     JSR BIN2HEX
0410     LDA D1
0420     STA (INDPTR),Y
0430     JSR INCPTR
0440     LDA D0
0450     STA (INDPTR),Y
0460     JSR INCPTR
0470     LDA #'-
0480     STA (INDPTR),Y
0490     JSR INCPTR
0500 DSPBIN_2
0510     LDA BUF,X
0520     JSR BIN2HEX
0530     CMP #EOL
0540     BNE DSPBIN_3
0550     LDA #$00    ;EOL->ZERO
0560 ; PRINT 8 BYTES
0570 DSPBIN_3
0580     STA FILE+$1D,Y ;CHAR
0590     LDA D1
0600     STA (INDPTR),Y
0610     JSR INCPTR
0620     LDA D0
0630     STA (INDPTR),Y
0640     JSR INCPTR
0650     LDA #$20
0660     STA (INDPTR),Y
0670     INX 
0680     JSR INCCNTR
0690     INY 
0700     DEC BYTRD
0710     LDA BYTRD
0720     BEQ DSPBIN_4 ;MXD READ CHRS?
0730     CPY #$08    ;MAX CHR LINE
0740     BNE DSPBIN_2
0750 ;
0760      @PRNTLN  FILE
0770 ; NEW ROW?
0780     CPX #$80
0790     BEQ DSPBIN_5
0800     JMP DSPBIN_1
0810 DSPBIN_4
0820      @PRNTLN  FILE
0830 DSPBIN_5
0840      @HIDCHR  
0850     RTS 
0860 ;
0870 ;
0880 ;
0890 ; DRAW HEADER LINE USING FILPOS
0900 DRWHDR
0910      @FILLMEM  FILE,$28,$20
0920     LDX #$00
0930     LDY #$00
0940     LDA #$00
0950 DRWHDR_1
0960     TXA 
0970     JSR BIN2HEX
0980     LDA D1
0990     STA FILE+5,Y
1000     INY 
1010     LDA D0
1020     STA FILE+5,Y
1030     INX 
1040     INY 
1050     INY 
1060     CPX #$08
1070     BNE DRWHDR_1
1080     LDA #EOL
1090     STA FILE+5,Y
1100      @PRNTLN  FILE
1110 ;
1120      @DRAW  CHL,$05,$17
1130     RTS 
1140 ;
1150 ;
1160 ;
1170 ; DRAWS A LINE
1180 ; A-CHAR, INP1-BUF
1190 ; X-POS, Y-LEN
1200 DRAW
1210     PHA 
1220     STX D0
1230     TYA 
1240     CLC 
1250     ADC D0
1260     STA D0
1270     PLA 
1280 DRAW_1
1290     STA INP1,X
1300     INX 
1310     CPX D0
1320     BNE DRAW_1
1330     LDA #EOL
1340     STA INP1,X
1350      @PRNTLN  INP1
1360     RTS 
1370 ;
1380 ;
1390 ;
1400 ; RESETS A 4 DIGITS
1410 ; DECIMAL COUNTER
1420 RSTSCTCNT
1430     LDA #'1
1440     STA SCTR+3
1450     LDA #'0
1460     STA SCTR+2
1470     STA SCTR+1
1480     STA SCTR
1490     LDA #DEL
1500     STA SCTR+4
1510     RTS 
1520 ;
1530 ;
1540 ;
1550 ; CONVERT # BANKS TO MEM IN K
1560 ; A-# BANKS
1570 ; MEMD-TEXT DECIMAL
1580 BNK2DEC
1590     STA D0
1600 ; # BANKS TO MEMORY
1610      @MUL16PRM  $00,D0,$00,$10
1620     JSR MUL16
1630     PLA 
1640     STA VALUE
1650     PLA 
1660     STA VALUE+1
1670 ; TO DECIMAL
1680      @PTR2STK  MEMD
1690      @WRD2STK  VALUE
1700     JSR BIN2DEC
1710     LDX MEMD
1720     LDA #'K
1730     STA MEMD+1,X
1740     LDA #$20
1750     STA MEMD+2,X
1760     LDA #DEL
1770     STA MEMD+3,X
1780     RTS 
1790 ;
1800 ;
1810 ;
1820 ; INCREMENT SECTOR COUNTER BY 1
1830 INCSCTCNT
1840     INC SCTR+3
1850     LDA SCTR+3
1860     CMP #$3A
1870     BNE INCDEC_1
1880     LDA #'0
1890     STA SCTR+3
1900     INC SCTR+2
1910     LDA SCTR+2
1920     CMP #$3A
1930     BNE INCDEC_1
1940     LDA #'0
1950     STA SCTR+2
1960     INC SCTR+1
1970     LDA SCTR+1
1980     CMP #$3A
1990     BNE INCDEC_1
2000     LDA #'0
2010     STA SCTR+1
2020     INC SCTR
2030 INCDEC_1
2040     RTS 
2050 ;
2060 ;
2070 ;
2080 ; DETECT INSERTED DISK DENSITY
2090 ; A - 1-SNG,2-ENH,3-DBL
2100 DTCDNS
2110      @SIOSNDOFF  
2120      @SETSCT  $10,$00
2130 ; READ SECTOR AND GET STAT
2140     LDA #SIO.RD
2150     STA DCOMND
2160     LDA DSKNUM
2170     STA DUNIT
2180     LDA #SIOST.RD
2190     STA DSTATS
2200     LDA # <BUF
2210     STA DBUFLO
2220     LDA # >BUF
2230     STA DBUFHI
2240     LDA #$07
2250     STA DTIMLO
2260     LDA #$80
2270     STA DBYTLO
2280     LDA #$00
2290     STA DBYTHI
2300     JSR SIOV
2310 ;    @DOSIO  SIO.RD,SIOST.RD,BUF,$07,$80,$00,SKPERR
2320 ;   JSR DOSIO
2330 ;   LDA DUNUSE
2340 ;   CMP #SIOERR
2350 ;   BEQ DTCDNS_3
2360 ;
2370     LDA #SIO.ST
2380     STA DCOMND
2390     JSR DSKINV
2400 ; CHECK FOR DOUBLE
2410     LDA DVSTAT
2420     AND #$20
2430     CMP #$20
2440     BEQ DTCDNS_1
2450 ; CHECK FOR ENHANCED
2460     LDA DVSTAT
2470     AND #$80
2480     CMP #$80
2490     BEQ DTCDNS_2
2500 ; PROBABLY SINGLE
2510     LDA #$01
2520     PHA 
2530     JMP DTCDNS_4
2540 DTCDNS_1
2550     LDA #$03
2560     PHA 
2570     JMP DTCDNS_4
2580 DTCDNS_2
2590     LDA #$02
2600     PHA 
2610     JMP DTCDNS_4
2620 DTCDNS_3
2630     LDA #$00
2640     PHA 
2650 DTCDNS_4
2660      @SIOSNDON  
2670     PLA 
2680     RTS 
2690 ;
2700 ;
2710 ;
2720 ; RESETS HS SIO MEM LOCATION
2730 RESETFIO
2740     LDA #$00
2750     STA FSIOV
2760     STA FSIOV+1
2770     RTS 
2780 ;
2790 ;
2800 ;
2810 ; READ HS SIO CODE FROM DRIVE
2820 ; AND PLACE IN FSIOV
2830 READFIO
2840     LDA FSIOV
2850     ORA FSIOV+1
2860     BNE READFIO_1
2870 ;
2880     LDA #$31
2890     STA DDEVIC
2900     LDA DSKNUM
2910     STA DUNIT
2920     LDA #SIO.SL
2930     STA DCOMND
2940     LDA #SIOST.RD
2950     STA DSTATS
2960     LDA #$08
2970     STA DBUFLO
2980     STA DTIMLO
2990     LDA #$03
3000     STA DBUFHI
3010     LDA #$02
3020     STA DBYTLO
3030     LDA #$00
3040     STA DBYTHI
3050     JSR SIOV
3060     BMI READFIO_1
3070 ;
3080     INC DCOMND
3090     LDA # <FSIOV
3100     STA DBUFLO
3110     STA DAUX1
3120     LDA # >FSIOV
3130     STA DBUFHI
3140     STA DAUX2
3150     LDA #SIOST.RD
3160     STA DSTATS
3170     JSR SIOV
3180 READFIO_1
3190     RTS 
3200 ;
3210 ;
3220 ;
3230 ; READ A SINGLE SECTOR
3240 ; BUF - BUFFER
3250 ; A - SCTR LO
3260 ; Y - SCTR HI
3270 RDSCT
3280     STA DAUX1
3290     STY DAUX2
3300      @DOSIO  SIO.RD,SIOST.RD,BUF,$07,$80,$00
3310     JSR DOSIO
3320     RTS 
3330 ;
3340 ;
3350 ;
3360 ; WRITE A SINGLE SECTOR
3370 ; BUF - BUFFER
3380 ; A - SCTR LO
3390 ; Y - SCTR HI
3400 WRTSCT
3410     STA DAUX1
3420     STY DAUX2
3430      @DOSIO  SIO.WT,SIOST.WT,BUF,$07,$80,$00
3440     JSR DOSIO
3450     RTS 
3460 ;
3470 ;
3480 ;
3490 ; INCREMENT 16BIT COUNTER
3500 INCCNTR
3510     INC FILPOS
3520     BNE INCCNTR_1
3530     INC FILPOS+1
3540 INCCNTR_1
3550     RTS 
3560 ;
3570 ;
3580 ;
3590 ; INCREMENT 16BIT POINTER
3600 INCPTR
3610     INC INDPTR
3620     BNE INCPTR_1
3630     INC INDPTR+1
3640 INCPTR_1
3650     RTS 
3660 ;
3670 ;
3680 ;
3690 ; EXECUTE AN SIO COMMAND
3700 ; COM,STAT,BUF,TIME,SIZE,FLAG
3710 ; DUNUSE - BITS 1,2
3720 DOSIO
3730      @GETRETADR  
3740     LDA #$31
3750     STA DDEVIC
3760 ; READ PARAMS
3770 DOSIO_1
3780     PLA 
3790     STA DCOMND
3800     PLA 
3810     STA DSTATS
3820     PLA 
3830     STA DBUFLO
3840     PLA 
3850     STA DBUFHI
3860     PLA 
3870     STA DTIMLO
3880     PLA 
3890     STA DBYTLO
3900     PLA 
3910     STA DBYTHI
3920     PLA 
3930     STA DUNUSE
3940 ;
3950     LDA DUNUSE
3960     AND #CNGDSK
3970     CMP #CNGDSK
3980     BEQ DOSIO_2
3990     LDA DSKNUM
4000     STA DUNIT
4010 ; POINT TO VALID SECTOR?
4020 DOSIO_2
4030     LDA DAUX1   ;BOTH 0?
4040     ORA DAUX2
4050     BNE DOSIO_3
4060     INC DAUX1   ;DEF SCTR 1
4070 DOSIO_3
4080     JSR CALLSIO
4090 DOSIO_7
4100      @SETRETADR  
4110     LDA DSTATS
4120 ;   LDA #$00
4130 ;   STA DUNUSE
4140     RTS 
4150 ;
4160 ;
4170 ;
4180 ; THE ACTUAL SIO CALL ROUTINE
4190 ;
4200 CALLSIO
4210 ; FAST SIO ONLY ON READ/WRITE
4220     LDA DCOMND
4230     CMP #SIO.RD
4240     BEQ CALLSIO_1
4250     CMP #SIO.WT
4260     BEQ CALLSIO_1
4270     JMP CALLSIO_2
4280 ; READ/WRITE
4290 CALLSIO_1
4300 ; USE THE CORRECT SECTOR SIZE
4310     JSR FXSCSZ
4320 ; HAVE FAST SIO?
4330     LDA FSIOV
4340     ORA FSIOV+1
4350     BEQ CALLSIO_2 ;NOT FSIOV?
4360     JSR FSIOV
4370     BMI CALLSIO_3
4380     JMP CALLSIO_5
4390 ; OTHER
4400 CALLSIO_2
4410     JSR SIOV
4420     BMI CALLSIO_3
4430     JMP CALLSIO_5
4440 ; ERROR FOR READ/WRITE ONLY
4450 CALLSIO_3
4460 ; $8B MAYBE OK (MyDos)
4470 ;   CPY #$8B
4480 ;   BEQ CALLSIO_5
4490     CPY #BREAK  ;BRK KEY
4500     BEQ CALLSIO_5
4510     LDA DCOMND
4520     CMP #SIO.HS
4530     BEQ CALLSIO_5
4540     CMP #SIO.ST
4550     BEQ CALLSIO_5
4560     CMP #SIO.WP
4570     BEQ CALLSIO_5
4580     LDA DUNUSE
4590     AND #SKPERR
4600     CMP #SKPERR
4610     BEQ CALLSIO_4
4620 ;
4630 ;   PLP
4640     JMP DISKERR
4650 CALLSIO_4
4660     LDA #SIOERR
4670     STA DUNUSE
4680 CALLSIO_5
4690     RTS 
4700 ;
4710 ;
4720 ;
4730 ; READ DAUX SECTOR NUMBER
4740 ; FIX DBUFLO/HI FOR RIGHT SIZE
4750 ; USE SINGLE FOR SECTORS 1-3
4760 FXSCSZ
4770     LDA DAUX2
4780     BNE FXSCSZ_1
4790     LDA DAUX1
4800     CMP #$04
4810     BCC FXSCSZ_2
4820 FXSCSZ_1
4830     LDA DENSITY
4840     CMP #$03
4850     BEQ FXSCSZ_3
4860 ; SINGLE
4870 FXSCSZ_2
4880     LDA #$00
4890     STA DBYTHI
4900     LDA #$80
4910     STA DBYTLO
4920     RTS 
4930 ; DOUBLE
4940 FXSCSZ_3
4950     LDA #$00
4960     STA DBYTLO
4970     LDA #$01
4980     STA DBYTHI
4990     RTS 
5000 ;
5010 ;
5020 ;
5030 ; CONVERT TEXT INPUT TO BINARY
5040 ; Y-LEN, INP1-IN
5050 INP2ADDR
5060     LDA #$00
5070     STA FILPOS
5080     STA FILPOS+1
5090     CPY #$02    ;AT LEAST 2 CHRS
5100     BCC INP2ADDR_2
5110     CPY #$04    ;NOW 4 CHRS
5120     BCC INP2ADDR_1
5130     LDA INP1
5140     LDY INP1+1
5150     JSR HEX2BIN
5160     STA FILPOS+1
5170     LDA INP1+2
5180     LDY INP1+3
5190     JSR HEX2BIN
5200     STA FILPOS
5210     RTS 
5220 INP2ADDR_1
5230     LDA INP1
5240     LDY INP1+1
5250     JSR HEX2BIN
5260     STA FILPOS
5270     RTS 
5280 INP2ADDR_2
5290     RTS 
5300 ;
5310 ;
5320 ;
5330 ; 2 CHR ATASCII HEX TO HEX NUM
5340 ; "A0"->A0
5350 ; A - STR LO BYTE
5360 ; Y - STR HI BYTE
5370 HEX2BIN
5380     PHA 
5390     TYA 
5400     JSR A2HEX
5410     STA TMP
5420     PLA 
5430     JSR A2HEX
5440     ASL A
5450     ASL A
5460     ASL A
5470     ASL A
5480     ORA TMP
5490     RTS 
5500 ;
5510 ;
5520 ;
5530 ; CONVERT ASCII TO HEX NIBBLE
5540 ;
5550 ; HELPER TO HEX2BIN
5560 A2HEX
5570     SEC 
5580     SBC #'0
5590     CMP #10
5600     BCC A2HEX1
5610     SBC #7
5620 A2HEX1
5630     RTS 
5640 ;
5650 ;
5660 ;
5670 ; EXECUTE A CIO COMAND
5680 ; DEVIO,ICM.XX,BUF,ICAX,BUFLEN
5690 DOCIO
5700      @GETRETADR  
5710     STX TMP     ;CACHE X
5720 ;
5730     PLA 
5740     TAX 
5750     PLA 
5760     STA ICCOM,X
5770     PLA 
5780     STA ICBAL,X
5790     PLA 
5800     STA ICBAH,X
5810     PLA 
5820     STA ICAX1,X
5830     PLA 
5840     STA ICBLL,X
5850     PLA 
5860     STA ICBLH,X
5870     LDA #$00
5880     STA ICAX2,X
5890     JSR CIOV
5900     BMI DOCIO_1
5910     LDX TMP
5920      @SETRETADR  
5930     RTS 
5940 DOCIO_1
5950     LDX TMP
5960     CPY #ICSTAT.EOF
5970     BNE DISKERR
5980      @SETRETADR  
5990     RTS 
6000 ;
6010 ;
6020 ;
6030 ; GENERIC ERROR HANDLER
6040 DISKERR
6050 ;   CPY #BREAK
6060 ;   BEQ DISKERR_1
6070 ; CONVERT TO DECIMAL
6080     STY VALUE
6090     JSR GETERRTXT
6100     LDA #$00
6110     STA VALUE+1
6120      @PTR2STK  INP1
6130      @WRD2STK  VALUE
6140     JSR BIN2DEC
6150      @CPYMEM  EMSG,BUF
6160     LDA #$00
6170     STA D0
6180      @CPYMEM  INP1+1,BUF+8,0,D0,INP1
6190      @CPYMEM  FILE,BUF+12
6200     JSR PRNTNL
6210      @PRNTLN  BUF
6220     JSR PRNTNL
6230 ; GET BACK
6240 DISKERR_1
6250     PLA 
6260     PLA 
6270     JMP (RTNPTR) ;GO BACK
6280 ;
6290 ;
6300 ;
6310 ; RETURN CIO ERROR TEXT
6320 ; Y-CODE,FILE-TEXT
6330 GETERRTXT
6340     LDX #$00
6350     TYA 
6360 ; FIND ENTRY
6370 GETERRTXT_1
6380     CMP CIO_CODE,X
6390     BEQ GETERRTXT_2
6400     CMP #$FF
6410     BEQ GETERRTXT_4
6420     INX 
6430     INX 
6440     INX 
6450     JMP GETERRTXT_1
6460 ; POINT TO RIGHT ENTRY
6470 GETERRTXT_2
6480     INX 
6490     LDA CIO_CODE,X
6500     STA INDPTR
6510     LDA CIO_CODE+1,X
6520     STA INDPTR+1
6530     LDY #$00
6540 ; COPY ERR MSG
6550 GETERRTXT_3
6560     LDA (INDPTR),Y
6570     STA FILE,Y
6580     INY 
6590     CMP #EOL
6600     BNE GETERRTXT_3
6610     RTS 
6620 GETERRTXT_4
6630     LDA #EOL
6640     STA FILE
6650     RTS 
6660 ;
6670 ;
6680 ;
6690 ; GET A SINGLE CHAR FROM USER
6700 GETCHR
6710      @MKCAPS  
6720     LDX #KBDID
6730     LDA #ICM.GB
6740     STA ICCOM,X
6750     LDA #0
6760     STA ICBLL,X
6770     STA ICBLH,X
6780     JSR CIOV
6790     BMI GETCHRERR
6800 ;
6810     CMP #$1B    ;ESCAPE KEY
6820     BEQ GETCHRERR
6830 ; RELAY TO SCREEN
6840     STA MOD10
6850     LDA #DEL
6860     STA MOD10+1
6870      @PRNTLN  MOD10,DEL
6880 ;
6890     LDA MOD10   ;RECALL CHAR
6900     RTS 
6910 GETCHRERR
6920     JSR PRNTNL
6930     PLA 
6940     PLA 
6950     JMP (RTNPTR)
6960 ;
6970 ;
6980 ;
6990 ; 16 BIT MULTIPLICATION
7000 MUL16
7010      @GETRETADR  
7020     PLA 
7030     STA MLIER
7040     PLA 
7050     STA MLIER+1
7060     PLA 
7070     STA MCAND
7080     PLA 
7090     STA MCAND+1
7100 ;
7110     LDA #$00
7120     STA VALUE
7130     STA VALUE+1
7140     LDX #$11
7150     CLC 
7160 MULLP
7170     ROR VALUE+1
7180     ROR VALUE
7190     ROR MLIER+1
7200     ROR MLIER
7210     BCC DECCNT1
7220 ;
7230     CLC 
7240     LDA MCAND
7250     ADC VALUE
7260     STA VALUE
7270     LDA MCAND+1
7280     ADC VALUE+1
7290     STA VALUE+1
7300 DECCNT1
7310     DEX 
7320     BNE MULLP
7330     LDA MLIER+1
7340     PHA 
7350     LDA MLIER
7360     PHA 
7370      @SETRETADR  
7380     RTS 
7390 ;
7400 ;
7410 ;
7420 ; GET A TEXT INPUT FROM USER
7430 ; Y-RETURN # CHARACTERS
7440 ; A-LO BYTE INPUT
7450 ; Y-HI BYTE INPUT
7460 GETTEXT
7470     LDX #SCRID
7480     STA ICBAL,X
7490     LDA #ICM.GT
7500     STA ICCOM,X
7510     TYA 
7520     STA ICBAH,X
7530     LDA #$FF
7540     STA ICBLL,X
7550     LDA #0
7560     STA ICAX2,X
7570     JSR CIOV
7580     BMI GETTEXTERR
7590     DEC ICBLL,X ;REMOVE EOL
7600     LDY ICBLL,X ;# CHARS READ
7610     RTS 
7620 GETTEXTERR
7630     CPY #BREAK
7640     BEQ HANDLEBREAK
7650     JMP DISKERR ;NO, IO ERROR
7660 HANDLEBREAK
7670     PLA 
7680     PLA 
7690     JMP (RTNPTR)
7700 ;
7710 ;
7720 ;
7730 ; PRINT TEXT LINE ON SCREEN
7740 ; TMP-TEXT LENGTH
7750 ;
7760 PRNTLN
7770 ; CACHE
7780      @GETRETADR  
7790     STX D0
7800     STY D1
7810 ; PARAMS
7820     PLA 
7830     STA TMP
7840     PLA 
7850     STA INDPTR
7860     PLA 
7870     STA INDPTR+1
7880 ; PRINT TEXT
7890     LDX #SCRID
7900     LDA #ICM.PB
7910     STA ICCOM,X
7920     LDA INDPTR
7930     STA ICBAL,X
7940     LDA INDPTR+1
7950     STA ICBAH,X
7960     LDA TMP
7970     STA ICBLL,X
7980     LDA #$00
7990     STA ICBLH,X
8000 ; FIND DELIM?
8010     LDA TMP
8020     BPL PRNTLN_3
8030     LDY #$00
8040 PRNTLN_1
8050     LDA (INDPTR),Y
8060     INY 
8070     CMP TMP
8080     BNE PRNTLN_1
8090 ;
8100     LDA TMP
8110     CMP #EOL
8120     BEQ PRNTLN_2
8130     DEY         ;REMOVE DEL
8140 ; UPDATE # CHARS TO PRINT
8150 PRNTLN_2
8160     TYA 
8170     STA ICBLL,X
8180 PRNTLN_3
8190     JSR CIOV
8200 ; RESTORE
8210     LDX D0
8220     LDY D1
8230      @SETRETADR  
8240     RTS 
8250 ;
8260 ;
8270 ;
8280 ; PRINT A NEW LINE ON SCREEN
8290 ;
8300 PRNTNL
8310     LDA #EOL
8320     STA D2
8330      @PRNTLN  D2,1
8340     RTS 
8350 ;
8360 ;
8370 ;
8380 ; HEX 2 DECIMAL ASCII
8390 ; FF->"255"
8400 ;
8410 BIN2DEC
8420      @GETRETADR  
8430     PLA 
8440     STA FR0
8450     PLA 
8460     STA FR1
8470     PLA 
8480     STA INDPTR
8490     PLA 
8500     STA INDPTR+1
8510     JSR IFP
8520     JSR FASC
8530     LDY #$00
8540     LDX #$FF
8550 ; DISREGARD FIRST 0
8560     LDA LBUFF
8570     CMP #'0
8580     BNE BIN2HEX_1
8590     INX 
8600 BIN2HEX_1
8610     INX 
8620     INY 
8630     LDA LBUFF,X
8640     STA (INDPTR),Y
8650     BPL BIN2HEX_1
8660     AND #$7F
8670     STA (INDPTR),Y
8680     INY 
8690     LDA #EOL
8700     STA (INDPTR),Y
8710 ; # CHARS
8720     DEY 
8730     TYA 
8740     LDY #$00
8750     STA (INDPTR),Y
8760 ;
8770      @SETRETADR  
8780     RTS 
8790 ;
8800 ;
8810 ;
8820 ; NUM TO HEX REP
8830 ; A0->"A0"
8840 ; A - BYTE TO CNVRT
8850 BIN2HEX
8860 ; CACHE
8870     STA TMP
8880     PHA 
8890     TXA 
8900     PHA 
8910     TYA 
8920     PHA 
8930     LDA TMP
8940 ;
8950 ; HI NIBBLE
8960     TAX 
8970     AND #$F0
8980     LSR A
8990     LSR A
9000     LSR A
9010     LSR A
9020     JSR NASCII
9030     STA D1
9040 ;
9050 ; LO NIBBLE
9060     TXA 
9070     AND #$0F
9080     JSR NASCII
9090     STA D0
9100 ; RECALL
9110     PLA 
9120     TAY 
9130     PLA 
9140     TAX 
9150     PLA 
9160     RTS 
9170 NASCII
9180     CMP #$0A
9190     BCC NAS1
9200     CLC 
9210     ADC #$07
9220 NAS1
9230     ADC #'0
9240     RTS 
9250 ;
9260 ;
9270 ;
9280 ; DETECT # EXTENDED RAM BANKS
9290 ; A-# MEM PAGES
9300 DTXMEM
9310     LDA PORTB
9320     PHA 
9330     LDA #$00
9340     STA NUMBKS
9350 ; SAVE RAMDISK
9360     LDX #$7F
9370 DTXMEM_1
9380     TXA 
9390     ASL A
9400     ORA #$01
9410     STA PORTB
9420     LDA M4000
9430     STA BUF,X
9440     DEX 
9450     BPL DTXMEM_1
9460 ; CLR RAM TO TEST
9470     LDX #$7F
9480 DTXMEM_2
9490     TXA 
9500     ASL A
9510     ORA #$01
9520     STA PORTB
9530     LDA #$00
9540     STA M4000
9550     DEX 
9560     BPL DTXMEM_2
9570     LDA #$FF    ;RST POTB
9580     STA PORTB
9590     LDA #'K
9600     STA M4000
9610 ; COUNT BANKS
9620     LDX #$7F
9630 DTXMEM_3
9640     TXA 
9650     ASL A
9660     ORA #$01
9670     STA PORTB
9680     LDA M4000
9690     BNE SKIP
9700     INC NUMBKS
9710     LDA #'K
9720     STA M4000
9730 SKIP DEX 
9740     BPL DTXMEM_3
9750 ; RESTORE RAMDISK
9760     LDX #$7F
9770 DTXMEM_4
9780     TXA 
9790     ASL A
9800     ORA #$01
9810     STA PORTB
9820     LDA BUF,X
9830     STA M4000
9840     DEX 
9850     BPL DTXMEM_4
9860     PLA 
9870     STA PORTB
9880     LDA NUMBKS
9890     RTS 
9900 ;
9910 ;
9920 ;
9930 ; 4 DIGITS DEC TO HEX CONVERT
9940 ; A-LO BYTE
9950 ; Y-HI BYTE
9960 DEC2HEX
9970     STA INBUFF
9980     STY INBUFF+1
9990     LDA #$01
010000   STA CIX
010010   JSR AFP
010020   JSR FPI
010030   LDA FR0
010040   STA VALUE
010050   LDA FR1
010060   STA VALUE+1
010070   RTS 
010080 ;
010090 ;
010100 ;
010110 TMP *= *+1
010120 RTNPTR *= *+2 ;GLOBAL RETURN
010130 NUM2CNV *= *+1
010140 D0 *= *+1     ;TEMPORARY
010150 D1 *= *+1     ;TEMPORARY
010160 D2 *= *+1     ;TEMPORARY
010170 DSKNUM .BYTE 1 ;DRIVE
010180 MCAND *= *+2
010190 MLIER *= *+2
010200 VALUE *= *+2
010210 RETADR *= *+2
010220 NGFLAG *= *+1
010230 MOD10 *= *+2
010240 NUMBKS *= *+1 ;NUM OF BANKS
010250 FILPOS *= *+2 ;POS POINTER
010260 BYTRD *= *+1  ;BYTES READ
010270 ABORT *= *+1  ;ABRT ACTV COM
010280 SCTR *= *+5   ;SCTR DSP
010290 MEMD *= *+7   ;MEM
010300 DENSITY *= *+1 ;DSK DNSTY
010310 EMSG .BYTE "* Error    -",EOL
010320 FSIOV = $9A00 ;FST SIO ADDR
010330 DOSIN = $9A02 ;DOSINI CACHE
010340 BUF = $9A04   ;$100
010350 FILE = $9B05  ;FILE BUF $40
010360 INP1 = $9B26  ;HLPR $20
010370 BANKS .BYTE $FD
010380   .BYTE $A3,$A7,$AB,$AF
010390   .BYTE $E3,$E7,$EB,$EF
010400   .BYTE $83,$87,$8B,$8F
010410   .BYTE $C3,$C7,$CB,$CF
