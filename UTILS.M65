10 ;
20 ; UTILS.M65, V. 
30 ;
40 ;UTILITIES
50 ;
60 ;DSPBIN
70 ;
80 ; DISPLAYS $80 BYTES OF A MEMORY
90 ; ADDRESS IN A FORMATTED VIEW
0100 ; FILE-PRINTED LINE
0110 ; BUF-BUFFER
0120 ;
0130 DSPBIN
0140      @SHWCHR  
0150     LDA BYTRD
0160     CMP #$80
0170     BEQ DSPBIN_0
0180     LDA #$01    ;EOF REACHED
0190     STA ABORT
0200 DSPBIN_0
0210     JSR DRWHDR
0220     LDX #$00
0230 ; CLEAR LINE
0240 DSPBIN_1
0250      @FILLMEM  FILE,$28,$20
0260     LDA #EOL
0270     STA FILE+$25
0280     LDY #$00
0290      @POINT2TXT  FILE
0300 ; LOCATION
0310     LDA FILPOS+1
0320     JSR BIN2HEX
0330     LDA D1
0340     STA (INDPTR),Y
0350     JSR INCPTR
0360     LDA D0
0370     STA (INDPTR),Y
0380     JSR INCPTR
0390     LDA FILPOS
0400     JSR BIN2HEX
0410     LDA D1
0420     STA (INDPTR),Y
0430     JSR INCPTR
0440     LDA D0
0450     STA (INDPTR),Y
0460     JSR INCPTR
0470     LDA #'-
0480     STA (INDPTR),Y
0490     JSR INCPTR
0500 DSPBIN_2
0510     LDA BUF,X
0520     JSR BIN2HEX
0530     CMP #EOL
0540     BNE DSPBIN_3
0550     LDA #$00    ;EOL->ZERO
0560 ; PRINT 8 BYTES
0570 DSPBIN_3
0580     STA FILE+$1D,Y ;CHAR
0590     LDA D1
0600     STA (INDPTR),Y
0610     JSR INCPTR
0620     LDA D0
0630     STA (INDPTR),Y
0640     JSR INCPTR
0650     LDA #$20
0660     STA (INDPTR),Y
0670     INX 
0680     JSR INCCNTR
0690     INY 
0700     DEC BYTRD
0710     LDA BYTRD
0720     BEQ DSPBIN_4 ;MXD READ CHRS?
0730     CPY #$08    ;MAX CHR LINE
0740     BNE DSPBIN_2
0750 ;
0760      @PRNTLN  FILE
0770 ; NEW ROW?
0780     CPX #$80
0790     BEQ DSPBIN_5
0800     JMP DSPBIN_1
0810 DSPBIN_4
0820      @PRNTLN  FILE
0830 DSPBIN_5
0840      @HIDCHR  
0850     RTS 
0860 ;
0870 ;
0880 ;
0890 ; DRAW HEADER LINE USING FILPOS
0900 DRWHDR
0910      @FILLMEM  FILE,$28,$20
0920     LDX #$00
0930     LDY #$00
0940     LDA #$00
0950 DRWHDR_1
0960     TXA 
0970     JSR BIN2HEX
0980     LDA D1
0990     STA FILE+5,Y
1000     INY 
1010     LDA D0
1020     STA FILE+5,Y
1030     INX 
1040     INY 
1050     INY 
1060     CPX #$08
1070     BNE DRWHDR_1
1080     LDA #EOL
1090     STA FILE+5,Y
1100      @PRNTLN  FILE
1110 ;
1120      @DRAW  CHL,$05,$17
1130     RTS 
1140 ;
1150 ;
1160 ;
1170 ; DRAWS A LINE
1180 ; A-CHAR, INP1-BUF
1190 ; X-POS, Y-LEN
1200 DRAW
1210     PHA 
1220     STX D0
1230     TYA 
1240     CLC 
1250     ADC D0
1260     STA D0
1270     PLA 
1280 DRAW_1
1290     STA INP1,X
1300     INX 
1310     CPX D0
1320     BNE DRAW_1
1330     LDA #EOL
1340     STA INP1,X
1350      @PRNTLN  INP1
1360     RTS 
1370 ;
1380 ;
1390 ;
1400 ; RESETS A 4 DIGITS
1410 ; DECIMAL COUNTER
1420 RSTSCTCNT
1430     LDA #'1
1440     STA SCTR+3
1450     LDA #'0
1460     STA SCTR+2
1470     STA SCTR+1
1480     STA SCTR
1490     LDA #DEL
1500     STA SCTR+4
1510     RTS 
1520 ;
1530 ;
1540 ;
1550 ; CONVERT # BANKS TO MEM IN K
1560 ; A-# BANKS
1570 ; MEMD-TEXT DECIMAL
1580 BNK2DEC
1590     STA D0
1600 ; # BANKS TO MEMORY
1610      @MUL16PRM  $00,D0,$00,$10
1620     JSR MUL16
1630     PLA 
1640     STA VALUE
1650     PLA 
1660     STA VALUE+1
1670 ; TO DECIMAL
1680      @PTR2STK  MEMD
1690      @WRD2STK  VALUE
1700     JSR BIN2DEC
1710     LDX MEMD
1720     LDA #'K
1730     STA MEMD+1,X
1740     LDA #$20
1750     STA MEMD+2,X
1760     LDA #DEL
1770     STA MEMD+3,X
1780     RTS 
1790 ;
1800 ;
1810 ;
1820 ; INCREMENT SECTOR COUNTER BY 1
1830 INCSCTCNT
1840     INC SCTR+3
1850     LDA SCTR+3
1860     CMP #$3A
1870     BNE INCDEC_1
1880     LDA #'0
1890     STA SCTR+3
1900     INC SCTR+2
1910     LDA SCTR+2
1920     CMP #$3A
1930     BNE INCDEC_1
1940     LDA #'0
1950     STA SCTR+2
1960     INC SCTR+1
1970     LDA SCTR+1
1980     CMP #$3A
1990     BNE INCDEC_1
2000     LDA #'0
2010     STA SCTR+1
2020     INC SCTR
2030 INCDEC_1
2040     RTS 
2050 ;
2060 ;
2070 ;
2080 ; DETECT INSERTED DISK DENSITY
2090 ; A - 1-SNG,2-ENH,3-DBL
2100 DTCDNS
2110      @SIOSNDOFF  
2120      @SETSCT  $10,$00
2130 ; READ SECTOR AND GET STAT
2140      @DOSIO  SIO.RD,SIOST.RD,BUF,$07,$80,$00,SKPERR
2150     JSR DOSIO
2160     LDA DUNUSE
2170     CMP #SIOERR
2180     BEQ DTCDNS_3
2190 ;
2200     LDA #SIO.ST
2210     STA DCOMND
2220     JSR DSKINV
2230 ; CHECK FOR DOUBLE
2240     LDA DVSTAT
2250     AND #$20
2260     CMP #$20
2270     BEQ DTCDNS_1
2280 ; CHECK FOR ENHANCED
2290     LDA DVSTAT
2300     AND #$80
2310     CMP #$80
2320     BEQ DTCDNS_2
2330 ; PROBABLY SINGLE
2340     LDA #$01
2350     PHA 
2360     JMP DTCDNS_4
2370 DTCDNS_1
2380     LDA #$03
2390     PHA 
2400     JMP DTCDNS_4
2410 DTCDNS_2
2420     LDA #$02
2430     PHA 
2440     JMP DTCDNS_4
2450 DTCDNS_3
2460     LDA #$00
2470     PHA 
2480 DTCDNS_4
2490      @SIOSNDON  
2500     PLA 
2510     RTS 
2520 ;
2530 ;
2540 ;
2550 ; RESETS HS SIO MEM LOCATION
2560 RESETFIO
2570     LDA #$00
2580     STA FSIOV
2590     STA FSIOV+1
2600     RTS 
2610 ;
2620 ;
2630 ;
2640 ; READ HS SIO CODE FROM DRIVE
2650 ; AND PLACE IN FSIOV
2660 READFIO
2670     LDA FSIOV
2680     ORA FSIOV+1
2690     BNE READFIO_1
2700 ;
2710     LDA #$31
2720     STA DDEVIC
2730     LDA DSKNUM
2740     STA DUNIT
2750     LDA #SIO.SL
2760     STA DCOMND
2770     LDA #SIOST.RD
2780     STA DSTATS
2790     LDA #$08
2800     STA DBUFLO
2810     STA DTIMLO
2820     LDA #$03
2830     STA DBUFHI
2840     LDA #$02
2850     STA DBYTLO
2860     LDA #$00
2870     STA DBYTHI
2880     JSR SIOV
2890     BMI READFIO_1
2900 ;
2910     INC DCOMND
2920     LDA # <FSIOV
2930     STA DBUFLO
2940     STA DAUX1
2950     LDA # >FSIOV
2960     STA DBUFHI
2970     STA DAUX2
2980     LDA #SIOST.RD
2990     STA DSTATS
3000     JSR SIOV
3010 READFIO_1
3020     RTS 
3030 ;
3040 ;
3050 ;
3060 ; READ A SINGLE SECTOR
3070 ; BUF - BUFFER
3080 ; A - SCTR LO
3090 ; Y - SCTR HI
3100 RDSCT
3110     STA DAUX1
3120     STY DAUX2
3130      @DOSIO  SIO.RD,SIOST.RD,BUF,$07,$80,$00
3140     JSR DOSIO
3150     RTS 
3160 ;
3170 ;
3180 ;
3190 ; WRITE A SINGLE SECTOR
3200 ; BUF - BUFFER
3210 ; A - SCTR LO
3220 ; Y - SCTR HI
3230 WRTSCT
3240     STA DAUX1
3250     STY DAUX2
3260      @DOSIO  SIO.WT,SIOST.WT,BUF,$07,$80,$00
3270     JSR DOSIO
3280     RTS 
3290 ;
3300 ;
3310 ;
3320 ; INCREMENT 16BIT COUNTER
3330 INCCNTR
3340     INC FILPOS
3350     BNE INCCNTR_1
3360     INC FILPOS+1
3370 INCCNTR_1
3380     RTS 
3390 ;
3400 ;
3410 ;
3420 ; INCREMENT 16BIT POINTER
3430 INCPTR
3440     INC INDPTR
3450     BNE INCPTR_1
3460     INC INDPTR+1
3470 INCPTR_1
3480     RTS 
3490 ;
3500 ;
3510 ;
3520 ; EXECUTE AN SIO COMMAND
3530 ; COM,STAT,BUF,TIME,SIZE,FLAG
3540 ; DUNUSE - BITS 1,2
3550 DOSIO
3560      @GETRETADR  
3570     LDA #$31
3580     STA DDEVIC
3590 ; READ PARAMS
3600 DOSIO_1
3610     PLA 
3620     STA DCOMND
3630     PLA 
3640     STA DSTATS
3650     PLA 
3660     STA DBUFLO
3670     PLA 
3680     STA DBUFHI
3690     PLA 
3700     STA DTIMLO
3710     PLA 
3720     STA DBYTLO
3730     PLA 
3740     STA DBYTHI
3750     PLA 
3760     STA DUNUSE
3770 ;
3780     LDA DUNUSE
3790     AND #CNGDSK
3800     CMP #CNGDSK
3810     BEQ DOSIO_2
3820     LDA DSKNUM
3830     STA DUNIT
3840 ; POINT TO VALID SECTOR?
3850 DOSIO_2
3860     LDA DAUX1   ;BOTH 0?
3870     ORA DAUX2
3880     BNE DOSIO_3
3890     INC DAUX1   ;DEF SCTR 1
3900 DOSIO_3
3910     JSR CALLSIO
3920 DOSIO_7
3930      @SETRETADR  
3940     LDA DSTATS
3950 ;   LDA #$00
3960 ;   STA DUNUSE
3970     RTS 
3980 ;
3990 ;
4000 ;
4010 ; THE ACTUAL SIO CALL ROUTINE
4020 ;
4030 CALLSIO
4040 ; FAST SIO ONLY ON READ/WRITE
4050     LDA DCOMND
4060     CMP #SIO.RD
4070     BEQ CALLSIO_1
4080     CMP #SIO.WT
4090     BEQ CALLSIO_1
4100     JMP CALLSIO_2
4110 ; READ/WRITE
4120 CALLSIO_1
4130 ; USE THE CORRECT SECTOR SIZE
4140     JSR FXSCSZ
4150 ; HAVE FAST SIO?
4160     LDA FSIOV
4170     ORA FSIOV+1
4180     BEQ CALLSIO_2 ;NOT FSIOV?
4190     JSR FSIOV
4200     BMI CALLSIO_3
4210     JMP CALLSIO_5
4220 ; OTHER
4230 CALLSIO_2
4240     JSR SIOV
4250     BMI CALLSIO_3
4260     JMP CALLSIO_5
4270 ; ERROR FOR READ/WRITE ONLY
4280 CALLSIO_3
4290 ; $8B MAYBE OK (MyDos)
4300 ;   CPY #$8B
4310 ;   BEQ CALLSIO_5
4320     CPY #BREAK  ;BRK KEY
4330     BEQ CALLSIO_5
4340     LDA DCOMND
4350     CMP #SIO.HS
4360     BEQ CALLSIO_5
4370     CMP #SIO.ST
4380     BEQ CALLSIO_5
4390     CMP #SIO.WP
4400     BEQ CALLSIO_5
4410     LDA DUNUSE
4420     AND #SKPERR
4430     CMP #SKPERR
4440     BEQ CALLSIO_4
4450 ;
4460 ;   PLP
4470     JMP DISKERR
4480 CALLSIO_4
4490     LDA #SIOERR
4500     STA DUNUSE
4510 CALLSIO_5
4520     RTS 
4530 ;
4540 ;
4550 ;
4560 ; READ DAUX SECTOR NUMBER
4570 ; FIX DBUFLO/HI FOR RIGHT SIZE
4580 ; USE SINGLE FOR SECTORS 1-3
4590 FXSCSZ
4600     LDA DAUX2
4610     BNE FXSCSZ_1
4620     LDA DAUX1
4630     CMP #$04
4640     BCC FXSCSZ_2
4650 FXSCSZ_1
4660     LDA DENSITY
4670     CMP #$03
4680     BEQ FXSCSZ_3
4690 ; SINGLE
4700 FXSCSZ_2
4710     LDA #$00
4720     STA DBYTHI
4730     LDA #$80
4740     STA DBYTLO
4750     RTS 
4760 ; DOUBLE
4770 FXSCSZ_3
4780     LDA #$00
4790     STA DBYTLO
4800     LDA #$01
4810     STA DBYTHI
4820     RTS 
4830 ;
4840 ;
4850 ;
4860 ; CONVERT TEXT INPUT TO BINARY
4870 ; Y-LEN, INP1-IN
4880 INP2ADDR
4890     LDA #$00
4900     STA FILPOS
4910     STA FILPOS+1
4920     CPY #$02    ;AT LEAST 2 CHRS
4930     BCC INP2ADDR_2
4940     CPY #$04    ;NOW 4 CHRS
4950     BCC INP2ADDR_1
4960     LDA INP1
4970     LDY INP1+1
4980     JSR HEX2BIN
4990     STA FILPOS+1
5000     LDA INP1+2
5010     LDY INP1+3
5020     JSR HEX2BIN
5030     STA FILPOS
5040     RTS 
5050 INP2ADDR_1
5060     LDA INP1
5070     LDY INP1+1
5080     JSR HEX2BIN
5090     STA FILPOS
5100     RTS 
5110 INP2ADDR_2
5120     RTS 
5130 ;
5140 ;
5150 ;
5160 ; 2 CHR ATASCII HEX TO HEX NUM
5170 ; "A0"->A0
5180 ; A - STR LO BYTE
5190 ; Y - STR HI BYTE
5200 HEX2BIN
5210     PHA 
5220     TYA 
5230     JSR A2HEX
5240     STA TMP
5250     PLA 
5260     JSR A2HEX
5270     ASL A
5280     ASL A
5290     ASL A
5300     ASL A
5310     ORA TMP
5320     RTS 
5330 ;
5340 ;
5350 ;
5360 ; CONVERT ASCII TO HEX NIBBLE
5370 ;
5380 ; HELPER TO HEX2BIN
5390 A2HEX
5400     SEC 
5410     SBC #'0
5420     CMP #10
5430     BCC A2HEX1
5440     SBC #7
5450 A2HEX1
5460     RTS 
5470 ;
5480 ;
5490 ;
5500 ; EXECUTE A CIO COMAND
5510 ; DEVIO,ICM.XX,BUF,ICAX,BUFLEN
5520 DOCIO
5530      @GETRETADR  
5540     STX TMP     ;CACHE X
5550 ;
5560     PLA 
5570     TAX 
5580     PLA 
5590     STA ICCOM,X
5600     PLA 
5610     STA ICBAL,X
5620     PLA 
5630     STA ICBAH,X
5640     PLA 
5650     STA ICAX1,X
5660     PLA 
5670     STA ICBLL,X
5680     PLA 
5690     STA ICBLH,X
5700     LDA #$00
5710     STA ICAX2,X
5720     JSR CIOV
5730     BMI DOCIO_1
5740     LDX TMP
5750      @SETRETADR  
5760     RTS 
5770 DOCIO_1
5780     LDX TMP
5790     CPY #ICSTAT.EOF
5800     BNE DISKERR
5810      @SETRETADR  
5820     RTS 
5830 ;
5840 ;
5850 ;
5860 ; GENERIC ERROR HANDLER
5870 DISKERR
5880 ;   CPY #BREAK
5890 ;   BEQ DISKERR_1
5900 ; CONVERT TO DECIMAL
5910     STY VALUE
5920     LDA #$00
5930     STA VALUE+1
5940      @PTR2STK  INP1
5950      @WRD2STK  VALUE
5960     JSR BIN2DEC
5970 ; PRINT ERROR MESSAGE
5980     JSR PRNTNL
5990      @CPYMEM  INP1+1,EMSG+12,0,INP1
6000      @PRNTLN  EMSG
6010     JSR PRNTNL
6020 ; GET BACK
6030 DISKERR_1
6040     PLA 
6050     PLA 
6060     JMP (RTNPTR) ;GO BACK
6070 ;
6080 ;
6090 ;
6100 ; GET A SINGLE CHAR FROM USER
6110 GETCHR
6120      @MKCAPS  
6130     LDX #KBDID
6140     LDA #ICM.GB
6150     STA ICCOM,X
6160     LDA #0
6170     STA ICBLL,X
6180     STA ICBLH,X
6190     JSR CIOV
6200     BMI GETCHRERR
6210 ;
6220     CMP #$1B    ;ESCAPE KEY
6230     BEQ GETCHRERR
6240 ; RELAY TO SCREEN
6250     STA MOD10
6260     LDA #DEL
6270     STA MOD10+1
6280      @PRNTLN  MOD10,DEL
6290 ;
6300     LDA MOD10   ;RECALL CHAR
6310     RTS 
6320 GETCHRERR
6330     JSR PRNTNL
6340     PLA 
6350     PLA 
6360     JMP (RTNPTR)
6370 ;
6380 ;
6390 ;
6400 ; 16 BIT MULTIPLICATION
6410 MUL16
6420      @GETRETADR  
6430     PLA 
6440     STA MLIER
6450     PLA 
6460     STA MLIER+1
6470     PLA 
6480     STA MCAND
6490     PLA 
6500     STA MCAND+1
6510 ;
6520     LDA #$00
6530     STA VALUE
6540     STA VALUE+1
6550     LDX #$11
6560     CLC 
6570 MULLP
6580     ROR VALUE+1
6590     ROR VALUE
6600     ROR MLIER+1
6610     ROR MLIER
6620     BCC DECCNT1
6630 ;
6640     CLC 
6650     LDA MCAND
6660     ADC VALUE
6670     STA VALUE
6680     LDA MCAND+1
6690     ADC VALUE+1
6700     STA VALUE+1
6710 DECCNT1
6720     DEX 
6730     BNE MULLP
6740     LDA MLIER+1
6750     PHA 
6760     LDA MLIER
6770     PHA 
6780      @SETRETADR  
6790     RTS 
6800 ;
6810 ;
6820 ;
6830 ; GET A TEXT INPUT FROM USER
6840 ; Y-RETURN # CHARACTERS
6850 ; A-LO BYTE INPUT
6860 ; Y-HI BYTE INPUT
6870 GETTEXT
6880     LDX #SCRID
6890     STA ICBAL,X
6900     LDA #ICM.GT
6910     STA ICCOM,X
6920     TYA 
6930     STA ICBAH,X
6940     LDA #$FF
6950     STA ICBLL,X
6960     LDA #0
6970     STA ICAX2,X
6980     JSR CIOV
6990     BMI GETTEXTERR
7000     DEC ICBLL,X ;REMOVE EOL
7010     LDY ICBLL,X ;# CHARS READ
7020     RTS 
7030 GETTEXTERR
7040     CPY #BREAK
7050     BEQ HANDLEBREAK
7060     JMP DISKERR ;NO, IO ERROR
7070 HANDLEBREAK
7080     PLA 
7090     PLA 
7100     JMP (RTNPTR)
7110 ;
7120 ;
7130 ;
7140 ; PRINT TEXT LINE ON SCREEN
7150 ; TMP-TEXT LENGTH
7160 ;
7170 PRNTLN
7180 ; CACHE
7190      @GETRETADR  
7200     STX D0
7210     STY D1
7220 ; PARAMS
7230     PLA 
7240     STA TMP
7250     PLA 
7260     STA INDPTR
7270     PLA 
7280     STA INDPTR+1
7290 ; PRINT TEXT
7300     LDX #SCRID
7310     LDA #ICM.PB
7320     STA ICCOM,X
7330     LDA INDPTR
7340     STA ICBAL,X
7350     LDA INDPTR+1
7360     STA ICBAH,X
7370     LDA TMP
7380     STA ICBLL,X
7390     LDA #$00
7400     STA ICBLH,X
7410 ; FIND DELIM?
7420     LDA TMP
7430     BPL PRNTLN_3
7440     LDY #$00
7450 PRNTLN_1
7460     LDA (INDPTR),Y
7470     INY 
7480     CMP TMP
7490     BNE PRNTLN_1
7500 ;
7510     LDA TMP
7520     CMP #EOL
7530     BEQ PRNTLN_2
7540     DEY         ;REMOVE DEL
7550 ; UPDATE # CHARS TO PRINT
7560 PRNTLN_2
7570     TYA 
7580     STA ICBLL,X
7590 PRNTLN_3
7600     JSR CIOV
7610 ; RESTORE
7620     LDX D0
7630     LDY D1
7640      @SETRETADR  
7650     RTS 
7660 ;
7670 ;
7680 ;
7690 ; PRINT A NEW LINE ON SCREEN
7700 ;
7710 PRNTNL
7720     LDA #EOL
7730     STA D2
7740      @PRNTLN  D2,1
7750     RTS 
7760 ;
7770 ;
7780 ;
7790 ; HEX 2 DECIMAL ASCII
7800 ; FF->"255"
7810 ;
7820 BIN2DEC
7830      @GETRETADR  
7840     PLA 
7850     STA VALUE
7860     PLA 
7870     STA VALUE+1
7880     STA NGFLAG
7890     BPL GETBP
7900     LDA #$00
7910     SEC 
7920     SBC VALUE
7930     STA VALUE
7940     LDA #$00
7950     SBC VALUE+1
7960     STA VALUE+1
7970 GETBP
7980     PLA 
7990     STA INDPTR
8000     PLA 
8010     STA INDPTR+1
8020     LDA #$00
8030     LDY #$00
8040     STA (INDPTR),Y
8050 CNVERT
8060     LDA #$00
8070     STA MOD10
8080     STA MOD10+1
8090     LDX #$10
8100     CLC 
8110 DVLOOP
8120     ROL VALUE
8130     ROL VALUE+1
8140     ROL MOD10
8150     ROL MOD10+1
8160 ;
8170     SEC 
8180     LDA MOD10
8190     SBC #$0A
8200     TAY 
8210     LDA MOD10+1
8220     SBC #$00
8230     BCC DECCNT2
8240     STY MOD10
8250     STA MOD10+1
8260 DECCNT2
8270     DEX 
8280     BNE DVLOOP
8290     ROL VALUE
8300     ROL VALUE+1
8310 CONCH
8320     LDA MOD10
8330     CLC 
8340     ADC #'0
8350     JSR CONCAT
8360     LDA VALUE
8370     ORA VALUE+1
8380     BNE CNVERT
8390 EXIT
8400     LDA NGFLAG
8410     BPL POS
8420     LDA #'-
8430     JSR CONCAT
8440 POS
8450     LDY #$00
8460     LDA (INDPTR),Y
8470     TAY 
8480     INY 
8490     LDA #EOL
8500     STA (INDPTR),Y ; ADD EOL
8510 ;
8520      @SETRETADR  
8530     RTS 
8540 CONCAT
8550     PHA 
8560     LDY #$00
8570     LDA (INDPTR),Y
8580     TAY 
8590     BEQ EXITMR
8600 MVELP
8610     LDA (INDPTR),Y
8620     INY 
8630     STA (INDPTR),Y
8640     DEY 
8650     DEY 
8660     BNE MVELP
8670 EXITMR
8680     PLA 
8690     LDY #$01
8700     STA (INDPTR),Y
8710     LDY #$00
8720     LDA (INDPTR),Y
8730     CLC 
8740     ADC #$01
8750     STA (INDPTR),Y
8760     RTS 
8770 ;
8780 ;
8790 ;
8800 ; NUM TO HEX REP
8810 ; A0->"A0"
8820 ; A - BYTE TO CNVRT
8830 BIN2HEX
8840 ; CACHE
8850     STA TMP
8860     PHA 
8870     TXA 
8880     PHA 
8890     TYA 
8900     PHA 
8910     LDA TMP
8920 ;
8930 ; HI NIBBLE
8940     TAX 
8950     AND #$F0
8960     LSR A
8970     LSR A
8980     LSR A
8990     LSR A
9000     JSR NASCII
9010     STA D1
9020 ;
9030 ; LO NIBBLE
9040     TXA 
9050     AND #$0F
9060     JSR NASCII
9070     STA D0
9080 ; RECALL
9090     PLA 
9100     TAY 
9110     PLA 
9120     TAX 
9130     PLA 
9140     RTS 
9150 NASCII
9160     CMP #$0A
9170     BCC NAS1
9180     CLC 
9190     ADC #$07
9200 NAS1
9210     ADC #'0
9220     RTS 
9230 ;
9240 ;
9250 ;
9260 ; DETECT # EXTENDED RAM BANKS
9270 ; A-# MEM PAGES
9280 DTXMEM
9290     LDA PORTB
9300     PHA 
9310     LDA #$00
9320     STA NUMBKS
9330 ; SAVE RAMDISK
9340     LDX #$7F
9350 DTXMEM_1
9360     TXA 
9370     ASL A
9380     ORA #$01
9390     STA PORTB
9400     LDA M4000
9410     STA BUF,X
9420     DEX 
9430     BPL DTXMEM_1
9440 ; CLR RAM TO TEST
9450     LDX #$7F
9460 DTXMEM_2
9470     TXA 
9480     ASL A
9490     ORA #$01
9500     STA PORTB
9510     LDA #$00
9520     STA M4000
9530     DEX 
9540     BPL DTXMEM_2
9550     LDA #$FF    ;RST POTB
9560     STA PORTB
9570     LDA #'K
9580     STA M4000
9590 ; COUNT BANKS
9600     LDX #$7F
9610 DTXMEM_3
9620     TXA 
9630     ASL A
9640     ORA #$01
9650     STA PORTB
9660     LDA M4000
9670     BNE SKIP
9680     INC NUMBKS
9690     LDA #'K
9700     STA M4000
9710 SKIP DEX 
9720     BPL DTXMEM_3
9730 ; RESTORE RAMDISK
9740     LDX #$7F
9750 DTXMEM_4
9760     TXA 
9770     ASL A
9780     ORA #$01
9790     STA PORTB
9800     LDA BUF,X
9810     STA M4000
9820     DEX 
9830     BPL DTXMEM_4
9840     PLA 
9850     STA PORTB
9860     LDA NUMBKS
9870     RTS 
9880 ;
9890 ;
9900 ;
9910 ; 4 DIGITS DEC TO HEX CONVERT
9920 ; A-LO BYTE
9930 ; Y-HI BYTE
9940 DEC2HEX
9950     STY INDPTR+1
9960     STA INDPTR
9970 ;
9980     LDY #$00
9990     LDA (INDPTR),Y
010000   TAX 
010010   LDA #$01
010020   STA TMP
010030   LDA #$00
010040   STA VALUE
010050   STA VALUE+1
010060   STA NGFLAG
010070 ;
010080   TXA 
010090   BNE B2H_INIT
010100   JMP B2H_ERR
010110 B2H_INIT
010120   LDY TMP
010130   LDA (INDPTR),Y
010140   CMP #'-
010150   BNE B2H_PLUS
010160   LDA #$FF
010170   STA NGFLAG
010180   INC TMP
010190   DEX 
010200   BEQ B2H_ERR
010210   JMP B2H_CNVRT
010220 B2H_PLUS
010230   CMP #'+
010240   BNE B2H_CHKDIG
010250   INC TMP
010260   DEX 
010270   BEQ B2H_ERR
010280 B2H_CNVRT
010290   LDY TMP
010300   LDA (INDPTR),Y
010310 B2H_CHKDIG
010320   CMP #'0
010330   BMI B2H_ERR
010340   CMP #'9+1
010350   BPL B2H_ERR
010360   PHA 
010370 ;
010380   ASL VALUE
010390   ROL VALUE+1
010400   LDA VALUE
010410   LDY VALUE+1
010420   ASL VALUE
010430   ROL VALUE+1
010440   ASL VALUE
010450   ROL VALUE+1
010460   CLC 
010470   ADC VALUE
010480   STA VALUE
010490   TYA 
010500   ADC VALUE+1
010510   STA VALUE+1
010520 ;
010530   PLA 
010540   SEC 
010550   SBC #'0
010560   CLC 
010570   ADC VALUE
010580   STA VALUE
010590   BCC B2H_D2B1
010600   INC VALUE+1
010610 B2H_D2B1
010620   INC TMP
010630   DEX 
010640   BNE B2H_CNVRT
010650   LDA NGFLAG
010660   BPL B2H_OK
010670   LDA #$00
010680   SEC 
010690   SBC VALUE
010700   STA VALUE
010710   LDA #$00
010720   SBC VALUE+1
010730   STA VALUE+1
010740 B2H_OK
010750   CLC 
010760   BCC B2H_EXIT
010770 B2H_ERR
010780   SEC 
010790 B2H_EXIT
010800   RTS 
010810 ;
010820 ;
010830 ;
010840 TMP *= *+1
010850 RTNPTR *= *+2 ;GLOBAL RETURN
010860 NUM2CNV *= *+1
010870 D0 *= *+1     ;TEMPORARY
010880 D1 *= *+1     ;TEMPORARY
010890 D2 *= *+1     ;TEMPORARY
010900 DSKNUM .BYTE 1 ;DRIVE
010910 MCAND *= *+2
010920 MLIER *= *+2
010930 VALUE *= *+2
010940 RETADR *= *+2
010950 NGFLAG *= *+1
010960 MOD10 *= *+2
010970 NUMBKS *= *+1 ;NUM OF BANKS
010980 FILPOS *= *+2 ;POS POINTER
010990 BYTRD *= *+1  ;BYTES READ
011000 ABORT *= *+1  ;ABRT ACTV COM
011010 SCTR *= *+5   ;SCTR DSP
011020 MEMD *= *+7   ;MEM
011030 DENSITY *= *+1 ;DSK DNSTY
011040 EMSG .BYTE "*** Disk Error    ",EOL
011050 FSIOV = $9A00 ;FST SIO ADDR
011060 BUF = $9A04   ;$100
011070 FILE = $9B05  ;FILE BUF $40
011080 INP1 = $9B26  ;HLPR $20
011090 BANKS .BYTE $FD
011100   .BYTE $A3,$A7,$AB,$AF
011110   .BYTE $E3,$E7,$EB,$EF
011120   .BYTE $83,$87,$8B,$8F
011130   .BYTE $C3,$C7,$CB,$CF
